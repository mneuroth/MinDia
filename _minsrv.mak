#############################################################################
# Makefile for building: libminsrv.so.1.0.0
# Generated by qmake (1.04a) (Qt 3.1.1) on: Fri Feb 20 23:21:05 2004
# Project:  minsrv.pro
# Template: lib
# Command: $(QMAKE) -o _minsrv.mak minsrv.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -O2 -march=i586 -mcpu=i686 -fmessage-length=0 -fPIC -DNO_DEBUG -Wall -W -O2 -march=i586 -mcpu=i686 -fmessage-length=0 -fPIC -DNO_DEBUG -D_REENTRANT -fPIC  
CXXFLAGS = -pipe -O2 -march=i586 -mcpu=i686 -fmessage-length=0 -fPIC -DNO_DEBUG -Wall -W -O2 -march=i586 -mcpu=i686 -fmessage-length=0 -fPIC -DNO_DEBUG -D_REENTRANT -fPIC  
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I$(QTDIR)/mkspecs/default -I. -I/usr/include
LINK     = g++
LFLAGS   = -shared -Wl,-soname,libminsrv.so.1
LIBS     = $(SUBLIBS) -L/usr/lib/ -ldl -lpthread
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY) -p
COPY_DIR = $(COPY) -pR
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = tmp/

####### Files

HEADERS = minsrv/minbase.h \
		minsrv/miniini.h \
		minsrv/dllbase.h
SOURCES = minsrv/minbase.cpp \
		minsrv/miniini.cpp \
		minsrv/dllbase.cpp
OBJECTS = tmp/minbase.o \
		tmp/miniini.o \
		tmp/dllbase.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = 
OBJMOC = 
DIST	   = minsrv.pro
QMAKE_TARGET = minsrv
DESTDIR  = 
TARGET   = libminsrv.so.1.0.0
TARGETA	= libminsrv.a
TARGETD	= libminsrv.so.1.0.0
TARGET0	= libminsrv.so
TARGET1	= libminsrv.so.1
TARGET2	= libminsrv.so.1.0

first: all
####### Implicit rules

.SUFFIXES: .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: _minsrv.mak  $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC) $(SUBLIBS) 
	-$(DEL_FILE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS)
	-ln -s $(TARGET) $(TARGET0)
	-ln -s $(TARGET) $(TARGET1)
	-ln -s $(TARGET) $(TARGET2)



staticlib: $(TARGETA)

$(TARGETA): $(UICDECLS) $(OBJECTS) $(OBJMOC)
	-$(DEL_FILE) $(TARGETA) 
	$(AR) $(TARGETA) $(OBJECTS) $(OBJMOC)

mocables: $(SRCMOC)

$(MOC): 
	( cd $(QTDIR)/src/moc ; $(MAKE) )

_minsrv.mak: minsrv.pro  $(QTDIR)/mkspecs/default/qmake.conf 
	$(QMAKE) -o _minsrv.mak minsrv.pro
qmake: 
	@$(QMAKE) -o _minsrv.mak minsrv.pro

dist: 
	@mkdir -p tmp/minsrv && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) tmp/minsrv/ && ( cd `dirname tmp/minsrv` && $(TAR) minsrv.tar minsrv && $(GZIP) minsrv.tar ) && $(MOVE) `dirname tmp/minsrv`/minsrv.tar.gz . && $(DEL_FILE) -r tmp/minsrv

uiclean:

yaccclean:
lexclean:
clean:
	-$(DEL_FILE) $(OBJECTS) 
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)
	-$(DEL_FILE) $(TARGET0) $(TARGET1) $(TARGET2) $(TARGETA)


FORCE:

####### Compile

tmp/minbase.o: minsrv/minbase.cpp minsrv/minbase.h \
		minsrv/dllbase.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/minbase.o minsrv/minbase.cpp

tmp/miniini.o: minsrv/miniini.cpp minsrv/miniini.h \
		minsrv/dllbase.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/miniini.o minsrv/miniini.cpp

tmp/dllbase.o: minsrv/dllbase.cpp minsrv/dllbase.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/dllbase.o minsrv/dllbase.cpp

####### Install

install: all 

uninstall: 

